
--------------------------BTK KURS NOTLAR-------------------------



--1. DEÐÝÞKEN TANIMLAMA
USE SampleRetail
DECLARE @PRICE AS FLOAT,
@ISIM AS VARCHAR (20) = 'ISMAIL'
SET @PRICE = (SELECT AVG(list_price) FROM product.product)
SELECT @PRICE, @ISIM
--Hepsini birlikte execute etmek zorundasýn. Diðer türlü hata veriyor
--Declare ile deðiþken tanýmlanýyor set ile deðiþkene veri atanýyor

DECLARE @NAME AS VARCHAR(100),
@YEAR AS INT
SELECT
@NAME = product_name, @YEAR = model_year --Bu þekilde de deðiþkene veri atanabiliyor
FROM product.product
WHERE product_id = 1
--Select, from ile yapýlacaksa selectten sonra deðiþkene eþittir ile deðer atamasý yapýlýyor
SELECT @NAME,@YEAR


--2. DÖNGÜLER

USE SampleRetail
CREATE TABLE tarih(
ýd INT IDENTITY (1,1),
tarih2 DATETIME)
DECLARE @I AS INT = 0
WHILE @I < 10
BEGIN
	INSERT INTO tarih VALUES (GETDATE()) --Bu þekilde veri atanabildiði gibi PRINT ile yazdýrýlabiliyorda
	WAITFOR DELAY '00:00:01' --Her 1 saniyede 1 veri atmamýzý saðladý
	SET @I = @I+1
END
SELECT * FROM tarih
DROP TABLE tarih

---ÖRNEK2
USE ETRADE
DECLARE @NAME VARCHAR(40), @SEHIR VARCHAR (20), @DOGUM DATE, @YAS INT, @YASGRUBU VARCHAR(30), @I INT = 0
WHILE @I < 1
BEGIN
SELECT @NAME = CUSTOMERNAME FROM CUSTOMERS WHERE ID = ROUND(RAND()*999,0)
SELECT @SEHIR = CITY FROM CUSTOMERS WHERE ID = ROUND(RAND()*999,0)
SELECT @DOGUM = BIRTHDATE FROM CUSTOMERS WHERE ID = ROUND(RAND()*999,0)
SET @YAS = DATEDIFF(YEAR,@DOGUM,GETDATE())
IF @YAS <= 40
	SET @YASGRUBU = '40 YAÞ ALTI'
ELSE SET @YASGRUBU = '40 YAÞ ÜSTÜ'
SET @I = @I+1
END
SELECT @NAME, @SEHIR, @DOGUM, @YAS, @YASGRUBU --Bunu istediðin eyrde kullanabilirsin

DECLARE @I AS INT=0

WHILE @I<1000000
BEGIN
	DECLARE @ITEMID AS INT
	DECLARE @DATE AS DATETIME
	DECLARE @AMOUNT AS INT
	DECLARE @IOTYPE AS SMALLINT

	SET @ITEMID=ROUND(RAND()*500,0)
	IF @ITEMID=0
		SET @ITEMID=1
	SET @DATE=DATEADD(DAY,-ROUND(RAND()*365,0), GETDATE())
	SET @AMOUNT=ROUND(RAND()*9,0)+1
	SET @IOTYPE=ROUND(RAND()*1,0)+1
	INSERT INTO ITEMTRANSACTIONS
	(ITEMID,DATE_,AMOUNT,IOTYPE)
	VALUES (@ITEMID,@DATE,@AMOUNT,@IOTYPE)
 SET @I=@I+1
END


-----USER DEFINED FUNCTIONS

USE ETRADE
CREATE FUNCTION dbo.TOPLA(@SAYI1 AS INT, @SAYI2 AS INT)
RETURNS INT
AS
BEGIN
	DECLARE @SONUC AS INT
	SET @SONUC = @SAYI1 + @SAYI2
	RETURN @SONUC
END
SELECT dbo.TOPLA (13,39)


USE CRM2
CREATE FUNCTION DBO.CALCULATE_AGE(@BIRTHDATE AS DATE)
RETURNS INT
AS
BEGIN
	DECLARE @RESULT AS INT
	SET @RESULT = DATEDIFF(YEAR,@BIRTHDATE, GETDATE())
	RETURN @RESULT

END

SELECT TOP 1000 *, DBO.CALCULATE_AGE(BIRTHDATE) AS AGE FROM CUSTOMERS




CREATE FUNCTION DBO.MONTHNAME_(@DATE AS DATETIME)
RETURNS VARCHAR(10)
AS
BEGIN
DECLARE @RESULT AS VARCHAR(10)
	IF DATEPART(MONTH, @DATE) = 1 SET @RESULT = '01.OCK'
	IF DATEPART(MONTH, @DATE) = 2 SET @RESULT = '02.SBT'
	IF DATEPART(MONTH, @DATE) = 3 SET @RESULT = '03.MRT'
	IF DATEPART(MONTH, @DATE) = 4 SET @RESULT = '04.NSN'
	IF DATEPART(MONTH, @DATE) = 5 SET @RESULT = '05.MYS'
	IF DATEPART(MONTH, @DATE) = 6 SET @RESULT = '06.HZR'
	IF DATEPART(MONTH, @DATE) = 7 SET @RESULT = '07.TMZ'
	IF DATEPART(MONTH, @DATE) = 8 SET @RESULT = '08.AGU'
	IF DATEPART(MONTH, @DATE) = 9 SET @RESULT = '09.EYL'
	IF DATEPART(MONTH, @DATE) = 10 SET @RESULT = '10.EKM'
	IF DATEPART(MONTH, @DATE) = 11 SET @RESULT = '11.KSM'
	IF DATEPART(MONTH, @DATE) = 12 SET @RESULT = '12.ARA'
RETURN @RESULT
END
SELECT DBO.MONTHNAME_('1991-09-21')
--BUNU BU ÞEKÝLDE AYNI DATABASE ÝÇÝNDE KULLANABÝLÝYORUZ
--YAPTIÐIMIZ FONKSÝYONLAR AYNI DATABASE ÝÇÝNDE PROGRAMMABILITY-FUNCTIONS-SCALAR-VALUED FUNCTIONS ALTIND YER ALMAKTADIR


USE ETRADE
CREATE FUNCTION DBO.GETITEM_MINPRICE(@ITEMID AS INT)
RETURNS FLOAT
AS
BEGIN
	DECLARE @RESULT AS FLOAT
	SELECT @RESULT = MIN(UNITPRICE) FROM ORDERDETAILS WHERE @ITEMID = ID
	RETURN @RESULT
END
SELECT DBO.GETITEM_MINPRICE(84)
--DEZAVANTAJI PERFORMANS PROBLEMÝDÝR. HER SATIR ÝÇÝN FONKSÝYONU YENÝDEN ÇAÐIRIYOR OLDUÐU ÝÇÝN YAVAÞ ÝLERLÝYOR


CREATE FUNCTION DBO.GETITEM_PRICE(@ITEMID AS INT, @PRICETYPE AS VARCHAR(10))
RETURNS FLOAT
AS
BEGIN
	DECLARE @RESULT AS FLOAT
	IF @PRICETYPE = 'MIN'
	BEGIN
		SELECT @RESULT = MIN(UNITPRICE) FROM ORDERDETAILS WHERE @ITEMID = ID
	END
	IF @PRICETYPE = 'MAX'
	BEGIN
		SELECT @RESULT = MAX(UNITPRICE) FROM ORDERDETAILS WHERE @ITEMID = ID
	END
	IF @PRICETYPE = 'AVG'
	BEGIN
		SELECT @RESULT = AVG(UNITPRICE) FROM ORDERDETAILS WHERE @ITEMID = ID
	END
	RETURN @RESULT
END
SELECT DBO.GETITEM_PRICE(84, 'MIN')
--Ýçine fonksiyonel olmasý adýna farklý bir deðiþken atanarak farklý durumlar resmedilebilir


CREATE FUNCTION DBO.GETITEM(@ITEMID AS INT)
RETURNS TABLE
AS
RETURN
(
SELECT
	MIN(UNITPRICE) AS MINPRICE, 
	MAX(UNITPRICE) AS MAXPRICE, 
	AVG(UNITPRICE) AS AVGPRICE, 
	SUM(UNITPRICE) AS SUMPRICE 
		FROM ORDERDETAILS WHERE @ITEMID = ID
)

SELECT ID, ITEMCODE, ITEMNAME, ITEMINFO.MINPRICE,ITEMINFO.MAXPRICE
FROM ITEMS
CROSS APPLY DBO.GETITEM(ID) AS ITEMINFO
--Table olarakta user-defined functionslar tanýmlanabilir.
--Table olduðu zaman begin-end bloðu kullanýlmaz. As'den sonra direk return ile kayýt döndürür.
--Diðer tabloya gelmesi için join iþlmei olmasý lazým, onun yerine cross apply ile iþlem yapýlýr.